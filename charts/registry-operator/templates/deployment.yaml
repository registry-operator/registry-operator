apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "registry-operator.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
    {{- include "registry-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "registry-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry-operator
        control-plane: controller-manager
        {{- include "registry-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - name: manager
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: ENABLE_WEBHOOKS
          value: {{ quote .Values.controllerManager.manager.env.enableWebhooks }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
      {{- if .Values.webhook.enabled }}
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
      {{- end }}
        - containerPort: 8443
          name: metrics
        - containerPort: 8081
          name: healthz
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{ toYaml .Values.controllerManager.manager.resources | indent 10 | trim }}
        securityContext:
          {{ toYaml .Values.controllerManager.manager.containerSecurityContext | indent 10 | trim }}
      {{- if .Values.webhook.enabled }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      {{- end }}
      securityContext: {{- toYaml .Values.controllerManager.podSecurityContext | nindent
        8 }}
      serviceAccountName: {{ include "registry-operator.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      {{- if .Values.webhook.enabled }}
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      {{- end }}
