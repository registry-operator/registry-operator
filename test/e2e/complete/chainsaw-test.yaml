# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: complete
  labels:
    area: 'complete'
spec:
  timeouts:
    apply: 5s
    assert: 30s
    cleanup: 30s
    delete: 15s
    error: 30s
  steps:
    - name: Check if controller-manager exist
      try:
        - assert:
            resource:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: registry-operator-controller-manager
                namespace: registry-operator-system
              status:
                availableReplicas: 1
    - name: Create registry with all configuration options
      try:
        - create:
            resource:
              apiVersion: registry-operator.dev/v1alpha1
              kind: Registry
              metadata:
                name: complete
              spec:
                image: docker.io/library/registry:3.0.0-rc.3
                replicas: 2
                resources:
                  requests:
                    cpu: 100m
                    memory: 256Mi
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                          - key: kubernetes.io/arch
                            operator: In
                            values:
                              - amd64
                              - arm64
                          - key: kubernetes.io/os
                            operator: In
                            values:
                              - linux
    - name: Wait for Registry status to be ready and resources to be deployed
      try:
        - assert:
            resource:
              apiVersion: registry-operator.dev/v1alpha1
              kind: Registry
              metadata:
                name: complete
              status:
                ready: true
                version: "3.0.0-rc.3"
        - assert:
            resource:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: complete-registry
                labels:
                  app.kubernetes.io/managed-by: registry-operator
                  app.kubernetes.io/instance: (join('.', [$namespace, 'complete']))
                  app.kubernetes.io/part-of: registry
                  app.kubernetes.io/component: registry
                  app.kubernetes.io/version: "3.0.0-rc.3"
              spec:
                template:
                  spec:
                    containers:
                      - name: distribution
                        image: docker.io/library/registry:3.0.0-rc.3
                        command: [ "registry" ]
                        args: [ "serve", "/etc/distribution/config.yaml" ]
                        resources:
                          requests:
                            cpu: 100m
                            memory: 256Mi
                        volumeMounts:
                          - name: config
                            readOnly: true
                            mountPath: /etc/distribution
                    volumes:
                      - name: config
                        configMap:
                          name: 011736e51d0d6b0e5b15b6969cdeac2c71ef96871452ad64b7a86c91be61cc
                          items:
                            - key: config.yaml
                              path: config.yaml
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                            - matchExpressions:
                              - key: kubernetes.io/arch
                                operator: In
                                values:
                                  - amd64
                                  - arm64
                              - key: kubernetes.io/os
                                operator: In
                                values:
                                  - linux
              status:
                availableReplicas: 2
        - assert:
            resource:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: 011736e51d0d6b0e5b15b6969cdeac2c71ef96871452ad64b7a86c91be61cc
                labels:
                  app.kubernetes.io/managed-by: registry-operator
                  app.kubernetes.io/instance: (join('.', [$namespace, 'complete']))
                  app.kubernetes.io/part-of: registry
                  app.kubernetes.io/component: registry
                  app.kubernetes.io/version: "3.0.0-rc.3"
        - assert:
            resource:
              apiVersion: v1
              kind: Service
              metadata:
                name: complete-registry
                labels:
                  app.kubernetes.io/managed-by: registry-operator
                  app.kubernetes.io/instance: (join('.', [$namespace, 'complete']))
                  app.kubernetes.io/part-of: registry
                  app.kubernetes.io/component: registry
                  app.kubernetes.io/version: "3.0.0-rc.3"
