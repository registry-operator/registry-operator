# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: simplest
  labels:
    area: 'core'
spec:
  timeouts:
    apply: 5s
    assert: 30s
    cleanup: 30s
    delete: 15s
    error: 30s
  steps:
    - name: Check if controller-manager exist
      try:
        - assert:
            resource:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: registry-operator-controller-manager
                namespace: registry-operator-system
              status:
                availableReplicas: 1
    - name: Create simplest registry
      try:
        - create:
            resource:
              apiVersion: registry-operator.dev/v1alpha1
              kind: Registry
              metadata:
                name: simplest
    - name: Wait for Registry status to be ready and resources to be deployed
      try:
        - assert:
            resource:
              apiVersion: registry-operator.dev/v1alpha1
              kind: Registry
              metadata:
                name: simplest
              status:
                ready: true
        - assert:
            resource:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: simplest-registry
                labels:
                  app.kubernetes.io/managed-by: registry-operator
                  app.kubernetes.io/instance: (join('.', [$namespace, 'simplest']))
                  app.kubernetes.io/part-of: registry
                  app.kubernetes.io/component: registry
                  app.kubernetes.io/version: "latest"
              spec:
                template:
                  spec:
                    containers:
                      - name: distribution
                        image: docker.io/library/registry:3.0.0-rc.3
                        command: [ "registry" ]
                        args: [ "serve", "/etc/distribution/config.yaml" ]
                        volumeMounts:
                          - name: config
                            readOnly: true
                            mountPath: /etc/distribution
                    volumes:
                      - name: config
                        configMap:
                          name: 011736e51d0d6b0e5b15b6969cdeac2c71ef96871452ad64b7a86c91be61cc
                          items:
                            - key: config.yaml
                              path: config.yaml
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                            - matchExpressions:
                              - key: kubernetes.io/arch
                                operator: In
                                values:
                                  - amd64
                                  - arm64
                                  - ppc64le
                                  - s390x
                              - key: kubernetes.io/os
                                operator: In
                                values:
                                  - linux
              status:
                availableReplicas: 1
        - assert:
            resource:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: 011736e51d0d6b0e5b15b6969cdeac2c71ef96871452ad64b7a86c91be61cc
                labels:
                  app.kubernetes.io/managed-by: registry-operator
                  app.kubernetes.io/instance: (join('.', [$namespace, 'simplest']))
                  app.kubernetes.io/part-of: registry
                  app.kubernetes.io/component: registry
                  app.kubernetes.io/version: "latest"
        - assert:
            resource:
              apiVersion: v1
              kind: Service
              metadata:
                name: simplest-registry
                labels:
                  app.kubernetes.io/managed-by: registry-operator
                  app.kubernetes.io/instance: (join('.', [$namespace, 'simplest']))
                  app.kubernetes.io/part-of: registry
                  app.kubernetes.io/component: registry
                  app.kubernetes.io/version: "latest"
